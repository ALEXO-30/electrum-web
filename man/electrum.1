.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "ELECTRUM" "1" "February 2014" "Electrum 1.9.7" "Electrum"
.
.SH "NAME"
\fBelectrum\fR \- Bitcoin thin client ("wallet")
.
.SH "SYNOPSIS"
\fBelectrum\fR [\fIoptions\fR] \fIcommand\fR [\fIargs\fR] [\fIoptions\fR]
.
.br
\fBelectrum\fR [\fB\-g\fR \fIgui\fR] [\fB\-w\fR \fIwallet\fR] [\fB\-p\fR \fIproxy\fR] [\fB\-s\fR \fIserver\fR] \fIcommand\fR [\fB\-1\fR] [\fB\-o\fR] [\fB\-C\fR]
.
.br
\fBelectrum \-v\fR
.
.SH "DESCRIPTION"
\fBElectrum\fR is an easy to use Bitcoin wallet\. It protects you from losing coins in a backup mistake or computer failure, because your wallet can be recovered from a secret phrase you can write on paper or learn by heart\. There\'s no waiting time when you start Electrum, because it doesn\'t download the Bitcoin blockchain\.
.
.SH "OPTIONS"
.
.TP
\fB\-h\fR, \fB\-\-help\fR
Display help and exit\.
.
.TP
\fB\-g\fR \fIgui\fR, \fB\-\-gui\fR=\fIGUI\fR
Use the selected GUI, where gui is either \fIqt\fR, \fIlite\fR, \fIgtk\fR, \fItext\fR or \fIstdio\fR\. The default GUI is qt\.
.
.TP
\fB\-w\fR \fIpath/to/wallet\fR, \fB\-\-wallet\fR=\fIWALLET_PATH\fR
Load the wallet file \fIpath/to/wallet\fR instead of the default, \fI~/\.electrum/wallets/default_wallet\fR\.
.
.TP
\fB\-p\fR \fItype\fR:\fIhost\fR:\fIport\fR, \fB\-\-proxy\fR=\fIPROXY\fR
Use the proxy type:host:port to connect to an Electrum server, where type is either \fIsocks4\fR, \fIsocks5\fR or \fIhttp\fR\.
.
.TP
\fB\-s\fR \fIhost\fR:\fIport\fR:\fIprotocol\fR, \fB\-\-server\fR=\fISERVER\fR
Connect to the Electrum server at \fIhost\fR:\fIport\fR, where protocol is either \fIt\fR (tcp), \fIh\fR (http), \fIs\fR (tcp+ssl), or \fIg\fR (https)\. Port should be 8081 for http, 8082 for https, 50001 for tcp, or 50002 for ssl\.
.
.IP
The server respects the \fB\-\-oneserver\fR option\.
.
.TP
\fB\-1\fR, \fB\-\-oneserver\fR
Connect to one server only, useful when connecting to a private instance of \fIelectrum\-server(1)\fR\.
.
.TP
\fB\-o\fR, \fB\-\-offline\fR
Operate in offline mode, useful when no Internet connection is present\.
.
.TP
\fB\-C\fR, \fB\-\-concealed\fR
Don\'t echo seed to console, useful when restoring from seed on untrusted hosts\.
.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Verbose mode\. Shows debugging information\.
.
.SH "COMMANDS"
.
.TP
\fBcontacts\fR
Show your list of contacts\.
.
.IP
$ electrum contacts
.
.TP
\fBcreate\fR
Create a new wallet\.
.
.IP
$ electrum create
.
.TP
\fBcreatemultisig\fR
Create a multisignature transaction\.
.
.IP
$ electrum createmultisig \.\.\.
.
.TP
\fBcreaterawtransaction\fR
Create a raw transaction\.
.
.IP
$ electrum createrawtransaction \.\.\.
.
.TP
\fBdecoderawtransaction\fR
Decode a raw transaction\.
.
.IP
$ electrum decoderawtransaction \.\.\.
.
.TP
\fBdeseed\fR
Remove seed from wallet, creating a seedless, watching\-only wallet\.
.
.IP
$ electrum deseed
.
.TP
\fBdumpprivkey\fR
Dump private key for specified address\.
.
.IP
$ electrum dumpprivkey \fIADDRESS\fR
.
.TP
\fBdumpprivkeys\fR
Dump all private keys\.
.
.IP
$ electrum dumpprivkeys
.
.TP
\fBfreeze\fR
Freeze the funds at one of your wallet\'s addresses\.
.
.IP
$ electrum freeze \fIADDRESS\fR
.
.TP
\fBgetaddressbalance\fR
Return the balance of an address\.
.
.IP
$ electrum getaddressbalance \fIADDRESS\fR
.
.TP
\fBgetaddresshistory\fR
Return the transaction history of a wallet address\.
.
.IP
$ electrum getaddresshistory \fIADDRESS\fR
.
.TP
\fBgetbalance\fR
Return the balance of your wallet, or of one account\.
.
.IP
$ electrum getbalance \fIACCOUNT\fR
.
.TP
\fBgetconfig\fR
Return a configuration variable\.
.
.IP
$ electrum getconfig \fINAME\fR
.
.TP
\fBgetmpk\fR
Return your wallet\'s master public key\.
.
.IP
$ electrum getmpk
.
.TP
\fBgetpubkeys\fR
Return the pubkeys for a wallet address\.
.
.IP
$ electrum getpubkeys \fIADDRESS\fR
.
.TP
\fBgetrawtransaction\fR
Retrieve a transaction\.
.
.IP
$ electrum getrawtransaction \fITX_HASH\fR \fIHEIGHT\fR
.
.TP
\fBgetseed\fR
Print the generation seed of your wallet\.
.
.IP
$ electrum getseed
.
.TP
\fBgetservers\fR
Return the list of available servers\.
.
.IP
$ electrum getservers
.
.TP
\fBgetversion\fR
Return the version of your Electrum client\.
.
.IP
$ electrum getversion
.
.TP
\fBhelp\fR
Print help message\.
.
.IP
$ electrum help
.
.TP
\fBhistory\fR
Return the transaction history of your wallet\.
.
.IP
$ electrum history
.
.TP
\fBimportprivkey\fR
Import a private key into your wallet\.
.
.IP
$ electrum importprivkey \fIPRIVATE_KEY\fR
.
.TP
\fBlistaddresses\fR
Return a list of addresses in your wallet\.
.
.IP
$ electrum listaddresses [\fIoptions\fR]
.
.IP
\-a: show all addresses, including change addresses
.
.br
\-l: include labels in results
.
.TP
\fBlistunspent\fR
Return the list of unspent inputs in your wallet\.
.
.IP
$ electrum listunspent
.
.TP
\fBmksendmanytx\fR
Create and broadcast a signed transaction to one or more recipients\.
.
.IP
$ electrum mksendmanytx \fIRECIPIENT\fR \fIAMOUNT\fR [\fIRECIPIENT\fR \fIAMOUNT\fR \.\.\.] [\fIoptions\fR]
.
.IP
\-\-fee, \-f \fIFEE\fR\~\~\~\~\~\~\~\~\~\~\~\~: set transaction fee to \fIFEE\fR
.
.br
\-\-fromaddr, \-F \fIADDRESS\fR\~\~\~: send from bitcoin address \fIADDRESS\fR
.
.br
\-\-changeaddr, \-c \fIADDRESS\fR\~: send change to bitcoin address \fIADDRESS\fR
.
.TP
\fBmktx\fR
Create a signed transaction\.
.
.IP
$ electrum mktx \fIRECIPIENT\fR \fIAMOUNT\fR [\fILABEL\fR] [\fIoptions\fR]
.
.IP
\-\-fee, \-f \fIFEE\fR\~\~\~\~\~\~\~\~\~\~\~\~: set transaction fee to \fIFEE\fR
.
.br
\-\-fromaddr, \-F \fIADDRESS\fR\~\~\~: send from bitcoin address \fIADDRESS\fR
.
.br
\-\-changeaddr, \-c \fIADDRESS\fR\~: send change to bitcoin address \fIADDRESS\fR
.
.TP
\fBpassword\fR
Change your wallet password\.
.
.IP
$ electrum password
.
.TP
\fBpayto\fR
Create and broadcast a signed transaction\.
.
.IP
$ electrum payto \fIRECIPIENT\fR \fIAMOUNT\fR [\fIoptions\fR]
.
.IP
\-\-fee, \-f \fIFEE\fR\~\~\~\~\~\~\~\~\~\~\~\~: set transaction fee to \fIFEE\fR
.
.br
\-\-fromaddr, \-F \fIADDRESS\fR\~\~\~: send from bitcoin address \fIADDRESS\fR
.
.br
\-\-changeaddr, \-c \fIADDRESS\fR\~: send change to bitcoin address \fIADDRESS\fR
.
.IP
\fIRECIPIENT\fR can be a bitcoin address or an address label\.
.
.TP
\fBpaytomany\fR
Create and broadcast a signed transaction to one or more recipients\.
.
.IP
$ electrum paytomany \fIRECIPIENT\fR \fIAMOUNT\fR [\fIRECIPIENT\fR \fIAMOUNT\fR \.\.\.]
.
.IP
\-\-fee, \-f \fIFEE\fR\~\~\~\~\~\~\~\~\~\~\~\~: set transaction fee to \fIFEE\fR
.
.br
\-\-fromaddr, \-F \fIADDRESS\fR\~\~\~: send from bitcoin address \fIADDRESS\fR
.
.br
\-\-changeaddr, \-c \fIADDRESS\fR\~: send change to bitcoin address \fIADDRESS\fR
.
.IP
\fIRECIPIENT\fR can be a bitcoin address or an address label\.
.
.TP
\fBrestore\fR
Restore a wallet\. Accepts a seed or master public key\.
.
.IP
$ electrum restore
.
.TP
\fBsendrawtransaction\fR
Broadcast a signed transaction to the network\.
.
.IP
$ electrum sendrawtransaction \fITX_IN_HEXADECIMAL\fR
.
.TP
\fBsetconfig\fR
Set a configuration variable\.
.
.IP
$ electrum setconfig \fINAME\fR \fIVALUE\fR
.
.TP
\fBsetlabel\fR
Assign a label to an item\.
.
.IP
$ electrum setlabel \fITX_HASH\fR \fILABEL\fR
.
.TP
\fBsignmessage\fR
Sign a message with a key\. If you want to lead or end a message with spaces, or want double spaces inside the message, make sure you surround the string in quotes\.
.
.IP
$ electrum signmessage \fIADDRESS\fR \fIMESSAGE\fR
.
.TP
\fBsignrawtransaction\fR
Sign a raw transaction\.
.
.IP
$ electrum signrawtransaction \.\.\.
.
.TP
\fBunfreeze\fR
Unfreeze the funds at one of your wallet\'s addresses\.
.
.IP
$ electrum unfreeze \fIADDRESS\fR
.
.TP
\fBvalidateaddress\fR
Check that the address is valid\.
.
.IP
$ electrum validateaddress \fIADDRESS\fR
.
.TP
\fBverifymessage\fR
Verifies a signature\. If you want to lead or end a message with spaces, or want double spaces inside the message, make sure you surround the string in quotes\.
.
.IP
$ electrum verifymessage \fIADDRESS\fR \fISIGNATURE\fR \fIMESSAGE\fR
.
.SH "EXAMPLES"
\fBConnect to a specific electrum\-server instance\fR
.
.IP "" 4
.
.nf

$ electrum \-s electrum\.be:50002:s \-1
.
.fi
.
.IP "" 0
.
.P
\fBConnect to a specific electrum\-server instance (Tor hidden service)\fR
.
.IP "" 4
.
.nf

$ electrum \-p socks5:127\.0\.0\.1:9050 \-s 56ckl5obj37gypcu\.onion:50001:t \-1
.
.fi
.
.IP "" 0
.
.P
\fBCreate, sign and send a raw transaction\fR
.
.IP "" 4
.
.nf

$ electrum \-w wallet\.dat\.seedless listunspent
[
    {
        "address": "1AwViD7ewnVVrzt58ffQdheyTxMGhAshJ6",
        "index": 0,
        "raw_output_script": "76a9146d078f704c400f1840d02f4239ea8f40ce5a847488ac",
        "tx_hash": "cfed2aac04b2823a679d5d5956462b086ac8d47252d0a5506f9b8d5172d99f75",
        "value": "4"
    }
]

$ electrum \-w wallet\.dat\.seedless createrawtransaction \'[{"txid" : "cfed2aac04b2823a679d5d5956462b086ac8d47252d0a5506f9b8d5172d99f75","vout":0}]\' \'{"34PTJeM3gtGSk3fqAJ4iWcEsbip46cbDVw":0\.001,"1MbbbLkwLUvP4hXiDLE1Ma42sz9T3J89TG":3\.9988}\'
{
    "complete": false,
    "hex": "0100000001759fd972518d9b6f50a5d05272d4c86a082b4656595d9d673a82b204ac2aedcf0000000000ffffffff02a08601000000000017a9141d9613bb16091ab2876c829e6bd5f56bed14b9ed8740afd517000000001976a914e1ed88cdd3ff3eead6ebffca4493465b44db983a88ac00000000",
    "input_info": "[{\e"redeemScript\e":null,\e"signatures\e":null,\e"vout\e":0,\e"txid\e":\e"cfed2aac04b2823a679d5d5956462b086ac8d47252d0a5506f9b8d5172d99f75\e",\e"KeyID\e":null,\e"pubkeys\e":null,\e"scriptPubKey\e":null}]"
}

$ electrum \-w wallet\.dat signrawtransaction \'0100000001759fd972518d9b6f50a5d05272d4c86a082b4656595d9d673a82b204ac2aedcf0000000000ffffffff02a08601000000000017a9141d9613bb16091ab2876c829e6bd5f56bed14b9ed8740afd517000000001976a914e1ed88cdd3ff3eead6ebffca4493465b44db983a88ac00000000\'
{
    "complete": true,
    "hex": "0100000001759fd972518d9b6f50a5d05272d4c86a082b4656595d9d673a82b204ac2aedcf000000008b483045022100a8065915b3ad1fa3e41db8d06cecdc11a938671369707e2ee390c1452eb930aa02202dde6b18a6c9f54497ef719784feb9e0a8cb5fc4007ac4f40c5dc73bb3cb6a130141045ce62c5a778c083f623e720e99e00e56235578d22c4b7cebec5c42d4cf86d1b8aa5af0f1f5846e899c98605cbad41a4161d200ce929db5e867977912c2415340ffffffff02a08601000000000017a9141d9613bb16091ab2876c829e6bd5f56bed14b9ed8740afd517000000001976a914e1ed88cdd3ff3eead6ebffca4493465b44db983a88ac00000000"
}

$ electrum \-w wallet\.dat\.seedless sendrawtransaction 0100000001759fd972518d9b6f50a5d05272d4c86a082b4656595d9d673a82b204ac2aedcf000000008b483045022100a8065915b3ad1fa3e41db8d06cecdc11a938671369707e2ee390c1452eb930aa02202dde6b18a6c9f54497ef719784feb9e0a8cb5fc4007ac4f40c5dc73bb3cb6a130141045ce62c5a778c083f623e720e99e00e56235578d22c4b7cebec5c42d4cf86d1b8aa5af0f1f5846e899c98605cbad41a4161d200ce929db5e867977912c2415340ffffffff02a08601000000000017a9141d9613bb16091ab2876c829e6bd5f56bed14b9ed8740afd517000000001976a914e1ed88cdd3ff3eead6ebffca4493465b44db983a88ac00000000
Connected to electrum\.pdmc\.net:50002
"be96b4426ca9ecff46a45c90f2ffbd12af5ea42c590180d309a5958a1327fa50"
.
.fi
.
.IP "" 0
.
.P
\fBRestore a wallet offline, without echoing seed to console, in an encfs sandbox\fR
.
.IP "" 4
.
.nf

$ quixand \-d ~/Sandbox && cd ~/Sandbox
$ electrum \-w wallet\.dat restore \-o \-C
.
.fi
.
.IP "" 0
.
.P
\fBSign and verify a message\fR:
.
.IP "" 4
.
.nf

$ electrum signmessage \e
  1AvjGBbScFmxqo1GudkH6Nc8TLDEdDtZXy \e
  "Message to be signed\."
HDxNHs2qRRApbC7FF70kWsIxJ6ntaTCbYP7vQJFbyMUtunXF5bd1KyzxqyPIZQWTEzBPX4MSKs1r+moSBblCRjI=

$ electrum verifymessage \e
  1AvjGBbScFmxqo1GudkH6Nc8TLDEdDtZXy \e
  HDxNHs2qRRApbC7FF70kWsIxJ6ntaTCbYP7vQJFbyMUtunXF5bd1KyzxqyPIZQWTEzBPX4MSKs1r+moSBblCRjI= \e
  "Message to be signed\."
true
.
.fi
.
.IP "" 0
.
.SH "FILES"
.
.TP
\fB~/\.electrum/config\fR
Per user configuration file\.
.
.SH "ENVIRONMENT"
.
.TP
\fBhttp_proxy\fR
When you are behind a firewall you can use a HTTP proxy to connect to an Electrum server with some limitations:
.
.IP
1\.) Electrum server selection won\'t work; you must manually enter the connection data (server, port & protocol)
.
.IP
2\.) Exchange rates cannot be fetched/displayed\.
.
.IP
$ export http_proxy="http://\fIproxyhost\fR:\fIproxyport\fR/"
.
.br
$ electrum \-s electrum\.no\-ip\.org:50002:s
.
.SH "BUGS"
Report issues at \fIhttps://github\.com/spesmilo/electrum/issues\fR\.
.
.SH "AUTHOR"
This manual page was written by Andy Weidenbaum\. Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation\.
.
.SH "SEE ALSO"
electrum\-server(1), bitcoind(1)
