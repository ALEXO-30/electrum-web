.TH ELECTRUM 1.9.7 "JANUARY 2014" Linux "User Manuals"
.SH NAME
.PP
electrum \- Bitcoin thin client ("wallet")
.SH SYNOPSIS
.PP
\fB\fCelectrum\fR [\fIoptions\fP] \fIcommand\fP [\fIargs\fP] [\fIoptions\fP]
.br
\fB\fCelectrum\fR [\fB\fC-w\fR \fIwallet\fP ] [\fB\fC-p\fR \fIproxy\fP ] [\fB\fC-s\fR \fIserver\fP ] [\fB\fC-g\fR \fIgui\fP ] \fIcommand\fP [\fB\fC-1\fR] [\fB\fC-o\fR] [\fB\fC-C\fR]
.br
\fB\fCelectrum -v\fR
.SH DESCRIPTION
.PP
\fB\fCElectrum\fR is an easy to use Bitcoin wallet. It protects you from
losing coins in a backup mistake or computer failure, because your
wallet can be recovered from a secret phrase you can write on paper
or learn by heart. There's no waiting time when you start Electrum,
because it doesn't download the Bitcoin blockchain.
.SH OPTIONS
.TP
\fB\fC-w\fR \fIpath/to/wallet\fP, \fB\fC--wallet\fR=\fIWALLET_PATH\fP
Load the wallet file \fIpath/to/wallet\fP instead of the default,
\fI~/.electrum/wallets/default_wallet\fP\&.
.TP
\fB\fC-p\fR \fItype:host:port\fP, \fB\fC--port\fR=\fIPORT\fP
Use the proxy type:host:port to connect to an Electrum server,
where type is either \fB\fCsocks4\fR, \fB\fCsocks5\fR or \fB\fChttp\fR\&.
.TP
\fB\fC-s\fR \fIhost:port:protocol\fP, \fB\fC--server\fR=\fISERVER\fP
Connect to the Electrum server at \fB\fChost:port\fR, where protocol is either
\fB\fCt\fR (tcp), \fB\fCh\fR (http), \fB\fCs\fR (tcp+ssl), or \fB\fCg\fR (https). Port should be
8081 for HTTP, 8082 for HTTPS, 50001 for TCP, or 50002 for SSL.
.TP
\fB\fC-g\fR \fI[gui]\fP, \fB\fC--gui\fR=\fIGUI\fP
Use the selected GUI, where gui is either \fB\fCqt\fR, \fB\fClite\fR, \fB\fCgtk\fR, \fB\fCtext\fR
or \fB\fCstdio\fR\&. The default GUI is \fB\fCqt\fR\&.
.TP
\fB\fC-1\fR, \fB\fC--oneserver\fR
Connect to one server only, useful when running a private instance
of electrum\-server.
.TP
\fB\fC-o\fR, \fB\fC--offline\fR
Operate in offline mode, useful when no Internet connection is present.
.TP
\fB\fC-C\fR, \fB\fC--concealed\fR
Don't echo seed to console, useful when running on potentially
untrusted hosts.
.TP
\fB\fC-h\fR, \fB\fC--help\fR
Display help and exit.
.TP
\fB\fC-v\fR, \fB\fC--verbose\fR
Verbose mode. Shows debugging information.
.SH COMMANDS
.TP
\fB\fCcontacts\fR
Show your list of contacts.
.TP
\fB\fCcreate\fR
Create a new wallet.
.TP
\fB\fCcreatemultisig\fR
TBD
.TP
\fB\fCcreaterawtransaction\fR
TBD
.TP
\fB\fCdecoderawtransaction\fR
TBD
.TP
\fB\fCdeseed\fR
Remove seed from wallet, creating a seedless, watching\-only wallet.
.PP
\fB\fCdumpprivkey\fR
  Dump private key for specified address.
    Syntax: electrum dumpprivkey {address}
.TP
\fB\fCdumpprivkeys\fR
Dump all private keys.
.PP
\fB\fCfreeze\fR
  Freeze the funds at one of your wallet's addresses.
    Syntax: electrum freeze {address}
.PP
\fB\fCgetaddressbalance\fR
  Return the balance of an address.
    Syntax: electrum getaddressbalance {address}
.PP
\fB\fCgetaddresshistory\fR
  Return the transaction history of a wallet address.
    Syntax: electrum getaddresshistory {address}
.PP
\fB\fCgetbalance\fR
  Return the balance of your wallet, or of one account in your wallet.
    Syntax: electrum getbalance {account}
.PP
\fB\fCgetconfig\fR
  Return a configuration variable.
    Syntax: electrum getconfig {name}
.PP
\fB\fCgetmpk\fR
  Return your wallet's master public key.
    Syntax: electrum getmpk
.PP
\fB\fCgetpubkeys\fR
  Return the pubkeys for a wallet address.
    Syntax: electrum getpubkeys {address}
.PP
\fB\fCgetrawtransaction\fR
  Retrieve a transaction.
    Syntax: electrum getrawtransaction {txhash} {height}
.PP
\fB\fCgetseed\fR
  Print the generation seed of your wallet.
    Syntax: electrum getseed
.PP
\fB\fCgetservers\fR
  Return the list of available servers.
    Syntax: electrum getservers
.PP
\fB\fCgetversion\fR
  Return the version of your client.
    Syntax: electrum getversion
.PP
\fB\fChelp\fR
  Print help.
    Syntax: electrum gethelp
.PP
\fB\fChistory\fR
  Return the transaction history of your wallet.
    Syntax: electrum history
.PP
\fB\fCimportprivkey\fR
  Import a private key into your wallet.
    Syntax: electrum importprivkey {privatekey}
.PP
\fB\fClistaddresses\fR
  Return a list of addresses in your wallet.
    Syntax:
      electrum listaddresses
    Options:
      \-a
        show all addresses, including change addresses
      \-l
        include labels in results
.PP
\fB\fClistunspent\fR
  Return the list of unspent inputs in your wallet.
    Syntax: electrum listunspent
.PP
\fB\fCmksendmanytx\fR
  Create and broadcast a signed transaction to one or more recipients.
    Syntax:
      electrum mksendmanytx {recipient} {amount} [{recipient} {amount} ...]
    Options:
      \-\-fee, \-f
        set transaction fee
      \-\-fromaddr, \-F
        send from address {address}
      \-\-changeaddr, \-c
        send change to address
.PP
\fB\fCmktx\fR
  Create a signed transaction.
    Syntax:
      electrum mktx {recipient} {amount} [label]
    Options:
      \-\-fee, \-f
        set transaction fee
      \-\-fromaddr, \-F
        send from address {address}
      \-\-changeaddr, \-c
        send change to address
.PP
\fB\fCpassword\fR
  Change your wallet password.
    Syntax: electrum password
.PP
\fB\fCpayto\fR
  Create and broadcast a transaction.
    Syntax: payto {recipient} {amount}
      {recipient} can be a bitcoin address or a label
    Options:
      \-\-fee, \-f
        set transaction fee
      \-\-fromaddr, \-F
        send from address {address}
      \-\-changeaddr, \-c
        send change to address
.PP
\fB\fCpaytomany\fR
  Create and broadcast a transaction to one or more recipients.
    Syntax: payto {recipient} {amount} [{recipient} {amount} ...]
      {recipient} can be a bitcoin address or a label
    Options:
      \-\-fee, \-f
        set transaction fee
      \-\-fromaddr, \-F
        send from address {address}
      \-\-changeaddr, \-c
        send change to address
.PP
\fB\fCrestore\fR
  Restore a wallet. Accepts a seed or master public key.
    Syntax: electrum restore
.PP
\fB\fCsendrawtransaction\fR
  Broadcast a signed transaction to the network.
    Syntax: electrum sendrawtransaction {tx in hexadecimal}
.PP
\fB\fCsetconfig\fR
  Set a configuration variable.
    Syntax: electrum setconfig {name} {value}
.PP
\fB\fCsetlabel\fR
  Assign a label to an item.
    Syntax: electrum setlabel {tx_hash} {label}
.PP
\fB\fCsignmessage\fR
  Sign a message with a key. If you want to lead or end a message with
  spaces, or want double spaces inside the message, make sure you surround
  the string in quotes.
    Syntax: electrum signmessage {address} {message}
.TP
\fB\fCsignrawtransaction\fR
TBD
.PP
\fB\fCunfreeze\fR
  Unfreeze the funds at one of your wallet's addresses.
    Syntax: electrum unfreeze {address}
.PP
\fB\fCvalidateaddress\fR
  Check that the address is valid.
    Syntax: electrum validateaddress {address}
.PP
\fB\fCverifymessage\fR
  Verifies a signature. If you want to lead or end a message with spaces,
  or want double spaces inside the message, make sure you surround the
  string in quotes.
    Syntax: electrum verifymessage {address} {signature} {message}
.SH FILES
.TP
\fI~/.electrum/config\fP
Per user configuration file. See 
.BR foo (5) 
for further details.
.SH ENVIRONMENT
.TP
\fB\fCFOOCONF\fR
If non\-null the full pathname for an alternate system wide
\fI/etc/foo.conf\fP\&. Overridden by the \fB\fC-c\fR option.
.SH DIAGNOSTICS
.PP
The following diagnostics may be issued on stderr:
.TP
\fBBad magic number.\fP
The input file does not look like an archive file.
.TP
\fBOld style baz segments.\fP
\fB\fCfoo\fR can only handle new style baz segments. COBOL object libraries
are not supported in this version.
.SH BUGS
.PP
Report issues at 
.UR https://github.com/spesmilo/electrum/issues
.UE \&.
.SH AUTHOR
.PP
This manual page was written by Andy Weidenbaum
.MT archbaum@gmail.com
.ME \&. Permission is granted to copy, distribute and/or
modify this document under the terms of the GNU General Public License,
Version 3 or any later version published by the Free Software Foundation.
.SH SEE ALSO
.PP
.BR electrum-server (1), 
.BR bitcoind (1)
